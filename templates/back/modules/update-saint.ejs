<%
    if (typeof saint === 'undefined') locals.saint = false;

    let form;
    if (locals.saint) {
        form = "<form id='update-saint' method='POST' action='../../api/saint/update' data-update='true'>";
    } else {
        form = "<form id='update-saint' method='POST' action='../api/saint/create'>";
   }

    let saintData = {
        title: locals.saint ? "Modification de : <span class='text-green'>" + __(saint.name) + "</span>" : data.head.title,
        name: {
            en: locals.saint ? __({phrase: saint.name, locale: 'en'}) : "",
            fr: locals.saint ? __({phrase: saint.name, locale: 'fr'}) : ""
        },
        comment: {
            en: __({phrase: saint.comment, locale: 'en'}),
            fr: __({phrase: saint.comment, locale: 'fr'})
        },
        image: locals.saint ? cloudinary.url("saints/" + saint.slug + "/" + saint.slug + ".png", {
            fetch_format: "auto", quality: "auto", secure: true
        }) : cloudinary.url("saints/default.png", { fetch_format: "auto", quality: "auto", secure: true }),
        ranks: () => {
            for (let i = 0, count = ranks.length; i < count; i++) {
                let cleanType = convertToSlug(ranks[i], /[ ]/g),
                    selected;

                if (locals.saint) {
                    selected = cleanType === convertToSlug(saint.rank, /[ ]/g) ? "selected": "";
                }
            %>
                <option id="rank-<%= cleanType %>" value="<%= cleanType %>" <%= selected %>><%= ranks[i] %></option>
            <%
            }
        },
        damage_types: () => {
            for (let i = 0, count = types.length; i < count; i++) {
                let cleanType = convertToSlug(types[i], /[ ]/g),
                    selected;

                if (locals.saint) {
                    selected = cleanType === convertToSlug(saint.damage_type, /[ ]/g) ? "selected": "";
                }
            %>
                <option id="damage-type-<%= cleanType %>" value="<%= cleanType %>" <%= selected %>><%= types[i] %></option>
            <%
            }
        },
        focus: () => {
            for (let i = 0, count = focus.length; i < count; i++) {
                let cleanType = convertToSlug(focus[i], /[ ]/g),
                    selected;

                if (locals.saint) {
                    selected = cleanType === convertToSlug(saint.focus, /[ ]/g) ? "selected": "";
                }
            %>
                <option id="focus-<%= cleanType %>" value="<%= cleanType %>" <%= selected %>><%= focus[i] %></option>
            <%
            }
        },
        roles: () => {
            for (let i = 0, count = roles.length; i < count; i++) {
                let cleanType = convertToSlug(roles[i], /[ ]/g),
                    selected;

                if (locals.saint) {
                    selected = saint.roles.indexOf(cleanType) > -1 ? "selected": "";
                }
            %>
                <option id="role-<%= cleanType %>" value="<%= cleanType %>" <%= selected %>><%= roles[i] %></option>
            <%
            }
        },
        handle_skills: (object) => {
            if (!locals.saints || (locals.saint && !object) || (locals.saints && object.length === 0)) {
                %>
                    <div class="col-12">
                        <div class="h6 text-white mb-0">Aucune compétence n'est actuellement liée !</div>
                    </div>
                <%

                return;
            }

            for (let i = 0, count = object.length; i < count; i++) {
                let skill = object[i];
                %>
                    <div class="col-<%= (12 / count) %>">
                        <div class="main-skill">
                            <img src="<%= cloudinary.url("skills/" + skill[i].slug + ".png", {fetch_format: "auto", quality: "auto", secure: true}) %>" alt="Skill icon" />
                            <span><%= __(skill.name) %></span>
                        </div>
                    </div>
                <%
            }
        },
        characteristics: {
            generate_fields: () => {
                for (let i = 0, count = characteristics.length; i < count; i++) {
                    let characteristic = characteristics[i].toLowerCase(),
                        cleanCharacteristic = convertToSlug(characteristic, /[. ]/g),
                        value;

                    if (locals.saint) {
                        value = saint.characteristics[0][cleanCharacteristic];
                    }
                    %>
                        <div class="col-1">
                            <label for="characteristic-<%= characteristic %>"><%= characteristics[i] %></label>
                            <input type="number" id="characteristic-<%= characteristic %>" value="<%= value %>" class="form-control" />
                        </div>
                    <%
                }
            }
        }
    };
%>

<%- form %>
    <div class="row mb-5">
        <div class="col-12">
            <h1 class="text-white h4">
                <i class="material-icons"><%= data.icon %></i>
                <span class="ml-2"><%- saintData.title %></span>
            </h1>
        </div>
    </div>

    <div class="form-group row mb-4">
        <div class="col-6">
            <div class="row">
                <div class="col-6">
                    <label for="fr-name">Name (FR)</label>
                    <input type="text" id="fr-name" name="fr-name" placeholder="Ex: Milo du Scorpion" class="form-control" minlength="3" value="<%= saintData.name.fr %>" />
                    <div class="small mt-1"><span class="font-weight-bold">·</span> Le nom doit correspondre à celui utilisé dans le jeu <span class="font-weight-bold">·</span></div>
                </div>
                <div class="col-6">
                    <label for="en-name">Name (EN) <span class="font-weight-bold text-error">*</span></label>
                    <input type="text" id="en-name" name="en-name" placeholder="Ex: Scorpio Milo" class="form-control" minlength="3" <%= locals.saint ? "readonly" : "" %> value="<%= saintData.name.en %>" required />
                    <div class="small mt-1"><span class="font-weight-bold">·</span> Le nom doit correspondre à celui utilisé dans le jeu <span class="font-weight-bold">·</span></div>
                </div>
            </div>
        </div>
        <div class="col-6">
            <div class="row">
                <div class="col-12 thumb-container">
                    <label for="avatar-input" class="pointer">Upload image <span class="small font-weight-bold">(max 256kb)</span>: <span class="text-gold"><%= !locals.saint ? "default.png" : "" %></span></label>
                    <input type="file" id="avatar-input" class="not-visible" accept=".jpg, .jpeg, .png">
                    <img src="<%= saintData.image %>" id="avatar-image" class="img-fluid img big object-fit-contain rounded pointer" alt="Avatar" />
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-12">
            <h2 class="h5 mt-0">Caractéristiques du saint</h2>
        </div>
        <div class="col-12 mt-2">
            <div class="row">
                <div class="col-2">
                    <label for="saint-levels">Niveau</label>
                    <select id="saint-levels" class="custom-select form-control">
                        <option disabled>Choose a level</option>
                        <option id="level-80" value="80" selected>80</option>
                    </select>
                </div>
                <%= saintData.characteristics.generate_fields() %>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-3 form-group">
            <label for="ranks">Rank <a href="#" class="very-small">(RESET)</a></label>
            <select id="ranks" class="custom-select form-control">
                <option selected disabled>Choose an attribute</option>
                <%= saintData.ranks() %>
            </select>
        </div>
        <div class="col-3 form-group">
            <label for="damage-types">Damage type <a href="#" class="very-small">(RESET)</a></label>
            <select id="damage-types" class="custom-select form-control">
                <option selected disabled>Choose an attribute</option>
                <%= saintData.damage_types() %>
            </select>
        </div>
        <div class="col-3 form-group">
            <label for="focus">Focus <a href="#" class="very-small">(RESET)</a></label>
            <select id="focus" class="custom-select form-control">
                <option selected disabled>Choose an attribute</option>
                <%= saintData.focus() %>
            </select>
        </div>
        <div class="col-3 form-group">
            <label for="roles">Roles <a href="#" class="very-small">(RESET)</a></label>
            <select id="roles" class="custom-select form-control" multiple>
                <%= saintData.roles() %>
            </select>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-6 form-group">
            <label for="main-skills">Compétences principales</label>
            <div class="row">
                <%= saintData.handle_skills(saint.main_skills) %>
            </div>
            <div class="small mt-1"><span class="font-weight-bold">·</span> Le lien des compétences principales <a href="manage-skills" class="text-green">se configure</a> dans les pages de compétences <span class="font-weight-bold">·</span></div>
        </div>
        <div class="col-6 form-group">
            <label for="main-skills">Compétences additionnelles</label>
            <div class="row">
                <%= saintData.handle_skills(saint.additionnal_skills) %>
            </div>
            <div class="small mt-1"><span class="font-weight-bold">·</span> Le lien des compétences additionnelles <a href="manage-skills" class="text-green">se configure</a> dans les pages de compétences <span class="font-weight-bold">·</span></div>
        </div>
    </div>

    <div class="e-s-4"></div>

    <div id="cosmos-suggestions" class="row elements-suggestions mb-4">
        <div class="col-12">
            <h2 id="test" class="h5 mt-0">Ajouter une suggestion de cosmos</h2>
        </div>
        <div class="col-12 mt-2">
            <div class="row">
                <div class="col-12 header">
                    <div class="row content">
                        <div class="col-1 index">Index</div>
                        <div class="col-1 fr-name">Name (FR)</div>
                        <div class="col-1 en-name">Name (EN)</div>
                        <div class="col-2 solar-cosmos">Solar</div>
                        <div class="col-2 lunar-cosmos">Lunar</div>
                        <div class="col-2 star-cosmos">Star</div>
                        <div class="col-2 legendary-cosmos">Legendary</div>
                        <div class="col-1 actions">Actions</div>
                    </div>
                </div>
                <div class="col-12 suggestions">
                    <% if (!locals.saint) { %>
                        <%-
                            include("partials/add-cosmos-suggestion", {
                                index: 0
                            })
                        %>
                    <% } else if (saint.cosmos_suggestions.length === 1) { %>
                        <%-
                            include("partials/add-cosmos-suggestion", {
                                index: 0,
                                elements: saint.cosmos_suggestions[0].elements,
                                template_name: saint.cosmos_suggestions[0].template_name,
                                comment: saint.cosmos_suggestions[0].comment
                            })
                        %>
                    <% } else { %>
                        <%
                            saint.cosmos_suggestions.forEach((suggestion, i) => {
                                %>
                                    <%-
                                        include("partials/add-cosmos-suggestion", {
                                            index: i,
                                            elements: suggestion.elements,
                                            comment: suggestion.comment
                                        })
                                    %>
                                <%
                            });
                        %>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <div class="e-s-4"></div>

    <div id="skills-suggestions" class="elements-suggestions row mb-4">
        <div class="col-12">
            <h2 class="h5 mt-0">Ajouter une suggestion de compétences</h2>
        </div>
        <div class="col-12 mt-2">
            <div class="row">
                <div class="col-12 header">
                    <div class="row content">
                        <div class="col-1 index">Index</div>
                        <div class="col-2 priorities">Priorités</div>
                        <div class="col-4 fr-comment">Comment (FR)</div>
                        <div class="col-4 en-comment">Comment (EN)</div>
                        <div class="col-1 actions">Actions</div>
                    </div>
                </div>
                <div class="col-12 suggestions">
                    <% if (!locals.saint) { %>
                        <%-
                            include("partials/add-skills-suggestion", {
                                index: 0
                            })
                        %>
                    <% } else if (saint.skills_suggestions.length === 1) { %>
                        <%-
                            include("partials/add-skills-suggestion", {
                                index: 0,
                                priorities: saint.skills_suggestions[0].priorities,
                                comment: saint.skills_suggestions[0].comment
                            })
                        %>
                    <% } else { %>
                        <%
                            saint.skills_suggestions.forEach((suggestion, i) => {
                                %>
                                    <%-
                                    include("partials/add-cosmos-suggestion", {
                                        index: i,
                                        priorities: suggestion.priorities,
                                        comment: suggestion.comment
                                    })
                                    %>
                                <%
                            });
                        %>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <div class="e-s-4"></div>

    <%-
        include("partials/composite-images", {
            title: "Composite an avatar with a mask",
            maxSize: "256kb",
            ids: {
                block: "composite-avatar-container",
                avatar: {
                    input: "composite-avatar-input",
                    image: "composite-avatar-image"
                },
                mask: {
                    input: "composite-avatar-mask-input",
                    image: "composite-avatar-mask-image"
                },
                result: "composite-avatar-result",
                process: "composite-avatar-process"
            },
            url: locals.saint ? "saints/" + saint.slug + "/" + saint.slug + ".png" : "resources/composite-images/image-mask-result.png"
        })
    %>

    <%-
        include("partials/composite-images", {
            title: "Add a large avatar and composite with a mask",
            maxSize: "1mo",
            ids: {
                block: "composite-large-avatar-container",
                avatar: {
                    input: "composite-large-avatar-input",
                    image: "composite-large-avatar-image"
                },
                mask: {
                    input: "composite-large-avatar-mask-input",
                    image: "composite-large-avatar-mask-image"
                },
                result: "composite-large-avatar-result",
                process: "composite-large-avatar-process"
            },
            url: locals.saint ? "saints/" + saint.slug + "/large-image.png" : "resources/composite-images/image-mask-result.png"
        })
    %>

    <div class="row mb-4">
        <div class="col-6">
            <label for="fr-comment">Partie commentaire (FR)</label>
            <textarea id="fr-comment" name="fr-comment" class="form-control"><%= saintData.comment.fr %></textarea>
        </div>
        <div class="col-6">
            <label for="en-comment">Partie commentaire (EN)</label>
            <textarea id="en-comment" name="en-comment" class="form-control"><%= saintData.comment.en %></textarea>
        </div>
    </div>

    <div class="e-s-5"></div>

    <div class="row mb-4">
        <div class="col-12 mx-auto text-center">
            <button id="submit" type="submit" class="btn btn-lg custom-theme theme-2">Sauvegarder les modifications</button>
        </div>
    </div>
</form>

