<%
    if (typeof cosmo === 'undefined') locals.cosmo = false;

    let form;
    if (locals.cosmo) {
        form = "<form id='update-cosmo' method='POST' action='../../api/cosmo/update' data-update='true'>";
    } else {
        form = "<form id='update-cosmo' method='POST' action='../api/cosmo/create'>";
   }

    let cosmoData = {
        title: locals.cosmo ? "Modification de : <span class='text-green'>" + __(cosmo._name) + "</span>" : data.head.title,
        _name: {
            en: locals.cosmo ? __({phrase: cosmo._name, locale: 'en'}) : "",
            fr: locals.cosmo ? __({phrase: cosmo._name, locale: 'fr'}) : ""
        },
        description: {
            en: locals.cosmo ? __({phrase: cosmo.description, locale: 'en'}) : "",
            fr: locals.cosmo ? __({phrase: cosmo.description, locale: 'fr'}) : ""
        },
        comment: {
            en: locals.cosmo ? __({phrase: cosmo.comment, locale: 'en'}) : "",
            fr: locals.cosmo ? __({phrase: cosmo.comment, locale: 'fr'}) : ""
        },
        image: locals.cosmo ? cloudinary.url("cosmos/" + cosmo.slug + ".png", {fetch_format: "auto", quality: "auto", secure: true}) : cloudinary.url("cosmos/default.png", {fetch_format: "auto", quality: "auto", secure: true}),
        basic_attributes: {
            values: {
                SS: {
                    level_10: locals.cosmo ? cosmo.basic_attributes.values.SS.level_10 : ""
                },
                S: {
                    level_10: locals.cosmo ? cosmo.basic_attributes.values.S.level_10 : ""
                }
            },
            types: [
                () => {
                    for (let i = 0, count = attributes.length; i < count; i++) {
                        let cleanAttribute = convertToSlug(attributes[i], /[ ]/g),
                            selected;

                        if (locals.cosmo) {
                            selected = cleanAttribute === convertToSlug(cosmo.basic_attributes.types[0], /[ ]/g) ? "selected": "";
                        }
                    %>
                        <option id="cosmo-attribute-1-<%= cleanAttribute %>" value="<%= cleanAttribute %>" <%= selected %>><%= attributes[i] %></option>
                    <%
                    }
                },
                () => {
                    for (let i = 0, count = attributes.length; i < count; i++) {
                        let cleanAttribute = convertToSlug(attributes[i], /[ ]/g),
                            selected;

                        if (locals.cosmo) {
                            selected = cleanAttribute === convertToSlug(cosmo.basic_attributes.types[1], /[ ]/g) ? "selected": "";
                        }
                    %>
                        <option id="cosmo-attribute-2-<%= cleanAttribute %>" value="<%= cleanAttribute %>" <%= selected %>><%= attributes[i] %></option>
                    <%
                    }
                }
            ]
        },
        bonus_attributes: {
            type: () => {
                for (let i = 0, count = attributes.length; i < count; i++) {
                    let cleanAttribute = convertToSlug(attributes[i], /[ ]/g),
                        selected;

                    if (locals.cosmo) {
                        selected = cleanAttribute === convertToSlug(cosmo.bonus_attributes.type, /[ ]/g) ? "selected" : "";
                    }
                %>
                    <option id="type-<%= cleanAttribute %>" value="<%= cleanAttribute %>" <%= selected %>><%= attributes[i] %></option>
                <%
                }
            },
            value: locals.cosmo ? cosmo.bonus_attributes.value : ""
        },
        type: () => {
            for (let i = 0, count = types.length; i < count; i++) {
                let cleanType = convertToSlug(types[i], /[ ]/g),
                    selected;

                if (locals.cosmo) {
                    selected = cleanType === convertToSlug(cosmo.type, /[ ]/g) ? "selected": "";
                }
            %>
                <option id="type-<%= cleanType %>" value="<%= cleanType %>" <%= selected %>><%= types[i] %></option>
            <%
            }
        },
        obtainment_system: () => {
            for (let system in systems) {
                let type = systems[system].data.constructor,
                    name = systems[system].name,
                    slug = convertToSlug(name, /[ ]/g);

                switch(type) {
                    case Array:
                        let array = systems[system].data;
                        %>
                            <div class="col-6">
                                <label for="obtainment-system-<%= slug %>">
                                    <span><%= name %></span>
                                    <a href="#" class="very-small">(RESET)</a>
                                </label>
                                <select id="obtainment-system-<%= slug %>" class="form-control custom-select" <%= systems[system].multiple ? "multiple" : "" %>>
                                    <option <%= locals.cosmo ? "" : "selected" %> disabled>Choose an entry</option>
                                    <%
                                        for (let i = 0, count = array.length; i < count; i++) {
                                            let cleanEntry = convertToSlug(array[i], /[ ]/g),
                                                selected;

                                            if (locals.cosmo) {
                                                selected = cosmo.obtainment_system[slug].map(v => v.toLowerCase()).indexOf(cleanEntry) > -1 ? "selected": "";
                                            }
                                            %>
                                                <option id="entry-<%= cleanEntry %>" value="<%= cleanEntry %>" <%= selected %>><%= array[i] %></option>
                                            <%
                                        }
                                    %>
                                </select>
                            </div>
                        <%
                        break;
                    case Boolean:
                        let value;

                        if (locals.cosmo) {
                            value = cosmo.obtainment_system[systems[system].name.toLowerCase()];
                        } else {
                            value = systems[system].data;
                        }
                        %>
                            <div class="col-6 mt-4">
                                <input type="checkbox" id="obtainment-system-<%= slug %>" name="obtainment-system-<%= slug %>" <%= value ? "checked='true'" : "" %> />
                                <label for="obtainment-system-<%= slug %>" class="ml-1"><%= name %></label>
                            </div>
                        <%
                        break;
                    default:
                        console.log("System type is not defined!");
                }
            }
        },
        cn_exclusive: locals.cosmo ? cosmo.cn_exclusive : ""
    };
%>

<%- form %>
    <div class="row mb-5">
        <div class="col-12">
            <h1 class="text-white h4">
                <i class="material-icons"><%= data.icon %></i>
                <span class="ml-2"><%- cosmoData.title %></span>
            </h1>
        </div>
    </div>

    <div class="form-group row mb-4">
        <div class="col-6">
            <div class="row">
                <div class="col-6">
                    <label for="fr-name">Name (FR)</label>
                    <input type="text" id="fr-name" name="fr-name" placeholder="Ex: Rosaire" class="form-control" minlength="3" <%= locals.cosmo ? "readonly" : "" %> value="<%= cosmoData._name.fr %>" />
                    <div class="small mt-1"><span class="font-weight-bold">·</span> Le nom doit correspondre à celui utilisé dans le jeu <span class="font-weight-bold">·</span></div>
                </div>
                <div class="col-6">
                    <label for="en-name">Name (EN) <span class="font-weight-bold text-error">*</span></label>
                    <input type="text" id="en-name" name="en-name" placeholder="Ex: Rosary" class="form-control" minlength="3" <%= locals.cosmo ? "readonly" : "" %> value="<%= cosmoData._name.en %>" required />
                    <div class="small mt-1"><span class="font-weight-bold">·</span> Le nom doit correspondre à celui utilisé dans le jeu <span class="font-weight-bold">·</span></div>
                </div>
            </div>
        </div>
        <div class="col-6">
            <div class="row">
                <div class="col-12 thumb-container">
                    <label for="custom-file" class="pointer">Upload image <span class="small font-weight-bold">(max 256kb)</span>: <span class="text-gold"><%= !locals.cosmo ? "default.png" : "" %></span></label>
                    <input type="file" id="custom-file" class="not-visible" accept=".jpg, .jpeg, .png">
                    <img src="<%= cosmoData.image %>" id="avatar" class="img-fluid img big object-fit-contain pointer" alt="Avatar" />
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-6">
            <label for="fr-description">Description (FR)</label>
            <textarea id="fr-description" name="fr-description" class="form-control" minlength="10"><%= cosmoData.description.fr %></textarea>
        </div>
        <div class="col-6">
            <label for="en-description">Description (EN)</label>
            <textarea id="en-description" name="en-description" class="form-control" minlength="10"><%= cosmoData.description.en %></textarea>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-6">
            <label for="fr-comment">Partie commentaire (FR)</label>
            <textarea id="fr-comment" name="fr-comment" class="form-control"><%= cosmoData.comment.fr %></textarea>
        </div>
        <div class="col-6">
            <label for="en-comment">Partie commentaire (EN)</label>
            <textarea id="en-comment" name="en-comment" class="form-control"><%= cosmoData.comment.en %></textarea>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-4 form-group">
            <label for="cosmos-attributes-1">Basic attribute n°1 <span class="font-weight-bold text-error">*</span> <a href="#" class="very-small">(RESET)</a></label>
            <select id="cosmos-attributes-1" class="custom-select form-control" required>
                <option selected disabled>Choose an attribute</option>
                <%= cosmoData.basic_attributes.types[0]() %>
            </select>
        </div>
        <div class="col-4">
            <label for="ss-cosmos-attributes-value-1">SS value (level 10)</label>
            <input type="text" id="ss-cosmos-attributes-value-1" name="ss-cosmos-attributes-value-1"
                   placeholder="Ex: 17" class="form-control" value="<%= cosmoData.basic_attributes.values.SS.level_10[0] %>" />
        </div>
        <div class="col-4">
            <label for="s-cosmos-attributes-value-1">S value (level 10)</label>
            <input type="text" id="s-cosmos-attributes-value-1" name="s-cosmos-attributes-value-1"
                   placeholder="Ex: 10%" class="form-control" value="<%= cosmoData.basic_attributes.values.S.level_10[0] %>" />
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-4 form-group">
            <label for="cosmos-attributes-2">Basic attribute n°2 <a href="#" class="very-small">(RESET)</a></label>
            <select id="cosmos-attributes-2" class="custom-select form-control">
                <option selected disabled>Choose an attribute</option>
                <%= cosmoData.basic_attributes.types[1]() %>
            </select>
        </div>
        <div class="col-4">
            <label for="ss-cosmos-attributes-value-2">SS value (level 10)</label>
            <input type="text" id="ss-cosmos-attributes-value-2" name="ss-cosmos-attributes-value-2"
                   placeholder="Ex: 15" class="form-control" value="<%= cosmoData.basic_attributes.values.SS.level_10[1] %>" />
        </div>
        <div class="col-4">
            <label for="s-cosmos-attributes-value-2">S value (level 10)</label>
            <input type="text" id="s-cosmos-attributes-value-2" name="s-cosmos-attributes-value-2"
                   placeholder="Ex: 30.2" class="form-control" value="<%= cosmoData.basic_attributes.values.S.level_10[1] %>" />
        </div>
    </div>

    <div class="form-group row mb-4">
        <div class="col-4">
            <div class="row mb-4">
                <div class="col-12">
                    <label for="bonus-attributes">Bonus attribute <a href="#" class="very-small">(RESET)</a></label>
                    <select id="bonus-attributes" class="form-control custom-select">
                        <option selected disabled>Choose a bonus attribute</option>
                        <%= cosmoData.bonus_attributes.type() %>
                    </select>
                </div>
            </div>
        </div>
        <div class="col-4">
            <label for="bonus-attribute-value">Bonus value</label>
            <input type="text" id="bonus-attribute-value" name="bonus-attribute-value" placeholder="5%" class="form-control" value="<%= cosmoData.bonus_attributes.value %>" />
        </div>
        <div class="col-4">
            <label for="cosmos-types">Cosmo type <span class="font-weight-bold text-error">*</span> <a href="#" class="very-small">(RESET)</a></label>
            <select id="cosmos-types" class="form-control custom-select" required>
                <option selected disabled>Choose a type</option>
                <%= cosmoData.type() %>
            </select>
        </div>
    </div>

    <div class="form-group row mb-4">
        <%= cosmoData.obtainment_system() %>
        <div class="col-6 mt-4">
            <input type="checkbox" id="cn-exclusive" <%= cosmoData.cn_exclusive ? "checked='true'" : "" %> />
            <label for="cn-exclusive" class="ml-1">Only on chinese version</label>
        </div>
    </div>

    <div class="form-group row mt-5 mb-4">
        <div class="col-12 mx-auto text-center">
            <button id="submit" type="submit" class="btn btn-lg custom-theme theme-2">Sauvegarder les modifications</button>
        </div>
    </div>
</form>
